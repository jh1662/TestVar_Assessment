<%- include('../../assets/header.html') %>
<title>Login</title>
<script type="module">
  //^ 'type="module"' allows 'await' to be used in main body of the script.

  commons.test();

  window.submitForm = submitForm;
  //^ neccessary for function to be called in a "module" type JS script.
  //^ it workes by making the function global, allowing to to be called by the HTML submit button

  async function redirectToProfile(){
    let response; let data; let status
    //^ set-up

    //: try to get user's ID
    const userId = await commons.getUserId();
    if(userId == -1){ return; }

    //: try to get user's detail by ID
    response = await fetch(`user/profile/${userId}`,{method: 'GET'});
    status = response.status
    if (status == 200){ document.body.innerHTML = await response.text();
      // window.location.href = `user/profile/${userId}`;
      //^ done instead to allow profile's JS script to actually execute.
      //^ nevermind it breaks the entire app instead
    }
    //commons.messagePage("Notice!", "unimportant warning", "you are already logged in!");
  }
  async function submitForm(event){
    event.preventDefault();
    //^ prevent the default form submission

    //: set-up
    let response; let data; let status

    const input = document.getElementById('form');
    //^ get user's input

    //: send request and process response
    data = {
      //* user's inputs
      username: input.username.value,
      password: input.password.value
    };
    response = await fetch(
      //* user's request to login
      '/user/login',{
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data)
      }
    );
    status = response.status;
    response = await response.json();
    //^ even this needs the "await" to wait for it to parse into JSON
    //^ otherwise it will return a "promise"

    if(status == 422){ commons.messagePage("error logging in", status, response.message); return; }
    //^ invalid login

    if (status == 201){
      //* valid login
      commons.storeToken(response.token);
      window.location.href = '/home';
      return;
    }
  };

  //: if user already logged in, then go to profile
  console.log("checking if user has logged in already");
  const isLoggedIn = await commons.loginCheck();
  if(isLoggedIn){ console.log("User has already logged in, redirecting"); redirectToProfile();}
  // <form action="/user/login" method="POST" >
</script>
</header>
<body>
  <%- include('../../assets/nav.html') %>
  <main>
  <h1>Login</h1>
  <div class="loginContainer">
    <h2>Enter credentials:</h2>

    <form id="form" onsubmit="submitForm(event)">
      <div class="inputGroup">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required>
      </div>
      <div class="inputGroup">
        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required>
      </div>
      <button type="submit">Login</button>
    </form>

    <p id="info">please log in</p>
  </div>
  </main>
  <%- include('../../assets/footer.html') %>
</body>
